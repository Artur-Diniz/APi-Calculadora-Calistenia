// <auto-generated />
using System;
using Calistenia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Calistenia.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231211010732_AddBlogCreatedTimestamp")]
    partial class AddBlogCreatedTimestamp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Calistenia.Models.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exercicio_Facilitado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GpMuscular_1")
                        .HasColumnType("int");

                    b.Property<int>("GpMuscular_2")
                        .HasColumnType("int");

                    b.Property<int>("GpMuscular_3")
                        .HasColumnType("int");

                    b.Property<int>("GpMuscular_4")
                        .HasColumnType("int");

                    b.Property<string>("Modo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dificuldade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_EXERCICIO");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 1,
                            GpMuscular_2 = 2,
                            GpMuscular_3 = 4,
                            GpMuscular_4 = 0,
                            Modo = "Repetição",
                            Nome = "Flexão Padrão",
                            Tipo = "PUSH",
                            dificuldade = 2
                        },
                        new
                        {
                            Id = 2,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 1,
                            GpMuscular_2 = 2,
                            GpMuscular_3 = 4,
                            GpMuscular_4 = 5,
                            Modo = "Repetição",
                            Nome = "Flexão Pike",
                            Tipo = "PUSH",
                            dificuldade = 3
                        },
                        new
                        {
                            Id = 3,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 10,
                            GpMuscular_2 = 11,
                            GpMuscular_3 = 0,
                            GpMuscular_4 = 0,
                            Modo = "Repetição",
                            Nome = "Elevação de Pernas na barra",
                            Tipo = "CORE",
                            dificuldade = 3
                        },
                        new
                        {
                            Id = 4,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 6,
                            GpMuscular_2 = 3,
                            GpMuscular_3 = 0,
                            GpMuscular_4 = 0,
                            Modo = "Repetição",
                            Nome = "Barra Fixa Pronada",
                            Tipo = "PULL",
                            dificuldade = 3
                        },
                        new
                        {
                            Id = 5,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 3,
                            GpMuscular_2 = 8,
                            GpMuscular_3 = 6,
                            GpMuscular_4 = 0,
                            Modo = "Repetição",
                            Nome = "Barra Fixa Supinada",
                            Tipo = "PULL",
                            dificuldade = 3
                        },
                        new
                        {
                            Id = 6,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 9,
                            GpMuscular_2 = 0,
                            GpMuscular_3 = 0,
                            GpMuscular_4 = 0,
                            Modo = "Repetição",
                            Nome = "Flexão Lombar",
                            Tipo = "CORE",
                            dificuldade = 2
                        },
                        new
                        {
                            Id = 7,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 12,
                            GpMuscular_2 = 0,
                            GpMuscular_3 = 0,
                            GpMuscular_4 = 0,
                            Modo = "Repetição",
                            Nome = "Prancha Lateral",
                            Tipo = "CORE",
                            dificuldade = 2
                        },
                        new
                        {
                            Id = 8,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 15,
                            GpMuscular_2 = 14,
                            GpMuscular_3 = 0,
                            GpMuscular_4 = 0,
                            Modo = "Repetição",
                            Nome = "Afundos",
                            Tipo = "PERNA",
                            dificuldade = 2
                        },
                        new
                        {
                            Id = 9,
                            Descricao = " ",
                            Exercicio_Facilitado = "",
                            GpMuscular_1 = 16,
                            GpMuscular_2 = 0,
                            GpMuscular_3 = 0,
                            GpMuscular_4 = 0,
                            Modo = "Repetição",
                            Nome = "Elevação de Calcanhar",
                            Tipo = "PERNA",
                            dificuldade = 2
                        });
                });

            modelBuilder.Entity("Calistenia.Models.RepSerie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Repeticao")
                        .HasColumnType("int");

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<int>("exercicioId")
                        .HasColumnType("int");

                    b.Property<int>("treinoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("exercicioId");

                    b.HasIndex("treinoId");

                    b.ToTable("TB_REPSERIE");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Repeticao = 8,
                            Serie = 3,
                            exercicioId = 9,
                            treinoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Repeticao = 10,
                            Serie = 2,
                            exercicioId = 9,
                            treinoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Repeticao = 12,
                            Serie = 2,
                            exercicioId = 9,
                            treinoId = 1
                        });
                });

            modelBuilder.Entity("Calistenia.Models.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rep_1")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_10")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_2")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_3")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_4")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_5")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_6")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_7")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_8")
                        .HasColumnType("int");

                    b.Property<int?>("Rep_9")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_TREINOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "ta potente essa perna fibrada ai meu mano",
                            Nome = "treino de Perna",
                            Rep_1 = 1,
                            Tipo = "PERNA"
                        });
                });

            modelBuilder.Entity("Calistenia.Models.RepSerie", b =>
                {
                    b.HasOne("Calistenia.Models.Exercicio", "Exercicios")
                        .WithMany("RepSeries")
                        .HasForeignKey("exercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calistenia.Models.Treino", "Treinos")
                        .WithMany("RepSeries")
                        .HasForeignKey("treinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercicios");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("Calistenia.Models.Exercicio", b =>
                {
                    b.Navigation("RepSeries");
                });

            modelBuilder.Entity("Calistenia.Models.Treino", b =>
                {
                    b.Navigation("RepSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
