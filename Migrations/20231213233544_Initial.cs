using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace API_Calistenia.Migrations
{
    /// <inheritdoc />
    public partial class Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIO",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PassWord_H", "PassWord_S" },
                values: new object[] { new byte[] { 68, 178, 137, 126, 223, 202, 62, 204, 235, 109, 171, 187, 107, 45, 123, 127, 233, 224, 0, 8, 90, 156, 248, 132, 232, 137, 181, 48, 101, 121, 12, 96, 244, 3, 20, 93, 102, 77, 139, 9, 43, 202, 207, 94, 221, 73, 141, 91, 188, 41, 100, 48, 190, 20, 6, 182, 142, 62, 152, 105, 216, 193, 226, 68 }, new byte[] { 98, 29, 246, 76, 72, 90, 69, 170, 191, 125, 54, 184, 79, 141, 176, 71, 34, 157, 53, 85, 17, 183, 173, 119, 10, 104, 77, 87, 164, 175, 162, 25, 14, 144, 114, 132, 78, 40, 245, 255, 225, 151, 27, 16, 60, 60, 172, 158, 252, 174, 229, 4, 61, 13, 244, 93, 167, 84, 230, 22, 93, 221, 224, 244, 49, 37, 233, 84, 112, 161, 84, 94, 43, 211, 80, 211, 239, 92, 62, 169, 74, 78, 5, 157, 103, 96, 40, 100, 136, 155, 171, 245, 72, 73, 174, 41, 210, 35, 171, 9, 116, 216, 73, 4, 116, 221, 25, 155, 210, 8, 148, 244, 172, 186, 167, 11, 147, 103, 10, 187, 24, 97, 141, 120, 97, 169, 221, 8 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIO",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PassWord_H", "PassWord_S" },
                values: new object[] { new byte[] { 167, 149, 184, 175, 194, 230, 236, 163, 148, 58, 241, 8, 128, 23, 21, 101, 166, 244, 205, 10, 21, 204, 28, 62, 97, 175, 40, 157, 250, 22, 206, 97, 167, 218, 103, 202, 141, 98, 40, 222, 18, 38, 239, 90, 90, 87, 83, 124, 59, 7, 85, 179, 84, 36, 252, 36, 178, 91, 17, 238, 206, 191, 255, 81 }, new byte[] { 116, 63, 152, 220, 188, 64, 209, 247, 233, 157, 254, 187, 4, 137, 41, 116, 244, 151, 113, 190, 36, 254, 218, 203, 160, 97, 3, 12, 34, 145, 58, 28, 24, 125, 161, 150, 199, 70, 19, 67, 24, 115, 246, 117, 197, 160, 98, 126, 100, 236, 76, 114, 56, 118, 121, 76, 4, 61, 198, 204, 239, 208, 87, 194, 5, 40, 51, 227, 231, 161, 163, 246, 219, 217, 61, 234, 7, 88, 208, 35, 131, 176, 73, 207, 38, 124, 81, 117, 17, 154, 161, 185, 3, 235, 241, 48, 233, 238, 182, 229, 225, 159, 174, 103, 163, 119, 190, 249, 253, 13, 33, 126, 225, 149, 144, 100, 198, 71, 246, 162, 206, 186, 56, 175, 85, 37, 78, 149 } });
        }
    }
}
